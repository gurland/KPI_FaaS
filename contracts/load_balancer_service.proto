// Is responsible for handling a pool of EdgeNodes that are able to start runtimes.
// It keeps track of warm runtimes.
// When a trigger occur the Load Balancer should have
//    Runtime tag;
//    Function code;
//    Trigger Context;
// We get a warm runtime


// Each EdgeNode is capable of caching a runtime and a function

syntax = "proto3";

import "common.proto";
import "function_service.proto";
import "runtime_service.proto";

package faas;


message InvokeFunctionRequest {
  DetailedFunction function = 1;
  BriefRuntime runtime = 2;
  string json_trigger_context = 3;
}

message InvocationResult {
  string json = 1;
  Logs log_lines = 2;
}

message RegisterNodeRequest {
  string port = 1;
}

message NodeConfiguration {

}


service LoadBalancerService {
  rpc InvokeFunction(InvokeFunctionRequest) returns (InvocationResult);
  rpc RegisterNode(RegisterNodeRequest) returns (NodeConfiguration);
}
